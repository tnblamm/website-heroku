{"version":3,"sources":["/Users/trungtrucnguyen/Documents/GitHub/website-heroku/src/app/quiz/quiz-teacher.component.html","/Users/trungtrucnguyen/Documents/GitHub/website-heroku/src/app/quiz/quiz-teacher.component.ts","/Users/trungtrucnguyen/Documents/GitHub/website-heroku/src/app/quiz/quiz.module.ts"],"names":[],"mappings":"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","file":"14.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"col-md-12 col-sm-12 col-xs-12\\\">\\n    <div class=\\\"x_panel\\\">\\n        <div class=\\\"x_title\\\">\\n            <h3>Quiz</h3>\\n            <div class=\\\"navbar-btn\\\">\\n                <div class=\\\"pull-right\\\">\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"selected_course\\\" (ngModelChange)=\\\"onChangeCourse()\\\">\\n                        <option *ngFor=\\\"let course of courses\\\" [ngValue]=\\\"course\\\">{{course.name}}-{{course.class_name}}</option>\\n                    </select>\\n                </div>\\n                <button class=\\\"btn btn-round btn-primary pull-right\\\" (click)=\\\"onAddQuiz()\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n        <div class=\\\"x_content\\\">\\n            <tabset [justified]=\\\"true\\\">\\n                <tab heading='Template'>\\n                    <accordion>\\n                        <ng-container *ngFor=\\\"let quiz of quiz_list; let i = index\\\">\\n                            <ng-container *ngIf=\\\"quiz.is_template\\\">\\n                                <accordion-group #group [isOpen]=\\\"quiz.isOpen\\\">\\n                                    <h4 accordion-heading>\\n                                        {{quiz.title}} - {{quiz.created_at | date:'short'}} - {{quiz.questions.length}} questions\\n                                        <i class=\\\"pull-right float-xs-right fa\\\" [ngClass]=\\\"{'fa-chevron-down': group?.isOpen, 'fa-chevron-right': !group?.isOpen}\\\"></i>\\n                                    </h4>\\n                                    <button class=\\\"btn btn-success\\\" (click)=\\\"onSaveQuiz(i)\\\"><i class=\\\"fa fa-save\\\"></i> Save</button>\\n                                    <button class=\\\"btn btn-danger\\\" (click)=\\\"onDeleteQuiz(quiz.id)\\\"><i class=\\\"fa fa-times\\\"></i> Delete</button>\\n                                    <div class=\\\"container-fluid\\\" *ngFor=\\\"let question of quiz.questions; let j = index\\\">\\n                                        <form class=\\\"form-group well\\\">\\n                                            <div class=\\\"form-group row\\\">\\n                                                <div class=\\\"col-sm-6 col-xs-12\\\">\\n                                                    <textarea autosize rows=\\\"2\\\" class=\\\"form-control only_bottom_border\\\" name=\\\"question_title_{{i}}\\\" placeholder=\\\"Question\\\" [(ngModel)]=\\\"question.text\\\" style=\\\"resize: none;\\\" (keydown)=\\\"onTabInTextarea($event)\\\"></textarea>\\n                                                </div>\\n                                                <div class=\\\"col-sm-4 col-xs-6\\\">\\n                                                    <label class=\\\"control-label col-sm-3\\\">Timer: </label>\\n                                                    <div class=\\\"col-sm-9\\\">\\n                                                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"question.timer\\\" name=\\\"question_timer_{{j}}\\\">\\n                                                            <option *ngFor=\\\"let timer of appService.timers\\\" [value]=\\\"timer.value\\\">{{timer.text}}</option>\\n                                                        </select>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"col-sm-1\\\" *ngIf=\\\"quiz.questions.length > 1\\\">\\n                                                    <button class=\\\"btn btn-danger\\\" (click)=\\\"onRemoveTemplateQuestion(i,j)\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                                                </div>\\n                                                <div class=\\\"col-sm-1\\\" *ngIf=\\\"j == quiz.questions.length-1\\\">\\n                                                    <button class=\\\"btn btn-primary\\\" (click)=\\\"onAddTemplateQuestion(i)\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"form-group row\\\">\\n                                                <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\n                                                    <input class=\\\"form-control\\\" name=\\\"question_{{j}}_option_a\\\" placeholder=\\\"Option A\\\" [(ngModel)]=\\\"question.option_a\\\">\\n                                                </div>\\n                                                <div class=\\\"col-sm-1 radio\\\">\\n                                                    <label>\\n                                                        <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_a\\\" [(ngModel)]=\\\"question.correct_option\\\">\\n                                                        <p class=\\\"green_text\\\" *ngIf=\\\"question.option_a == question.correct_option\\\">Correct</p>\\n                                                    </label>\\n                                                </div>\\n                                                <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\n                                                    <input class=\\\"form-control\\\" name=\\\"question_{{j}}_option_b\\\" placeholder=\\\"Option B\\\" [(ngModel)]=\\\"question.option_b\\\">\\n                                                </div>\\n                                                <div class=\\\"col-sm-1 radio\\\">\\n                                                    <label>\\n                                                        <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_b\\\" [(ngModel)]=\\\"question.correct_option\\\">\\n                                                        <p class=\\\"green_text\\\" *ngIf=\\\"question.option_b == question.correct_option\\\">Correct</p>\\n                                                    </label>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"form-group row\\\">\\n                                                <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\n                                                    <input class=\\\"form-control\\\" name=\\\"question_{{j}}_option_c\\\" placeholder=\\\"Option C\\\" [(ngModel)]=\\\"question.option_c\\\">\\n                                                </div>\\n                                                <div class=\\\"col-sm-1 radio\\\">\\n                                                    <label>\\n                                                        <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_c\\\" [(ngModel)]=\\\"question.correct_option\\\">\\n                                                        <p class=\\\"green_text\\\" *ngIf=\\\"question.option_c == question.correct_option\\\">Correct</p>\\n                                                    </label>\\n                                                </div>\\n                                                <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\n                                                    <input class=\\\"form-control\\\" name=\\\"question_{{j}}_option_d\\\" placeholder=\\\"Option D\\\" [(ngModel)]=\\\"question.option_d\\\">\\n                                                </div>\\n                                                <div class=\\\"col-sm-1 radio\\\">\\n                                                    <label>\\n                                                        <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_d\\\" [(ngModel)]=\\\"question.correct_option\\\">\\n                                                        <p class=\\\"green_text\\\" *ngIf=\\\"question.option_d == question.correct_option\\\">Correct</p>\\n                                                    </label>\\n                                                </div>\\n                                            </div>\\n                                        </form>\\n                                    </div>\\n                                </accordion-group>\\n                            </ng-container>\\n                        </ng-container>\\n                    </accordion>\\n                </tab>\\n                <tab heading='Result'>\\n                    <accordion>\\n                        <ng-container *ngFor=\\\"let quiz of quiz_list; let i = index\\\">\\n                            <ng-container *ngIf=\\\"!quiz.is_template\\\">\\n                                <accordion-group #group [isOpen]=\\\"quiz.isOpen\\\">\\n                                    <h4 accordion-heading>\\n                                        {{quiz.title}} - {{quiz.created_at | date:'short'}} - {{quiz.questions.length}} questions\\n                                        <i class=\\\"pull-right float-xs-right fa\\\" [ngClass]=\\\"{'fa-chevron-down': group?.isOpen, 'fa-chevron-right': !group?.isOpen}\\\"></i>\\n                                    </h4>\\n                                    <button class=\\\"btn btn-danger\\\" (click)=\\\"onDeleteQuiz(quiz.id)\\\"><i class=\\\"fa fa-times\\\"></i> Delete</button>\\n                                    <div class=\\\"row\\\" *ngFor=\\\"let question of quiz.questions\\\">\\n                                        <div class=\\\"col-sm-8 col-xs-12\\\">\\n                                            <h4 style=\\\"white-space: pre-wrap\\\"><label class=\\\"underline\\\">Q:</label> {{question.text}}</h4>\\n                                            <h4 [ngClass]=\\\"{'green_text': question.option_a == question.correct_option}\\\">A. {{question.option_a}}</h4>\\n                                            <h4 [ngClass]=\\\"{'green_text': question.option_b == question.correct_option}\\\">B. {{question.option_b}}</h4>\\n                                            <h4 [ngClass]=\\\"{'green_text': question.option_c == question.correct_option}\\\">C. {{question.option_c}}</h4>\\n                                            <h4 [ngClass]=\\\"{'green_text': question.option_d == question.correct_option}\\\">D. {{question.option_d}}</h4>\\n                                        </div>\\n                                        <div class=\\\"col-sm-4 col-xs-12\\\" style=\\\"overflow:auto; max-height:300px;\\\">\\n                                            <h4><label class=\\\"underline\\\">A:</label> {{question.answers.length}} answers</h4>\\n                                            <table class=\\\"table table-striped\\\">\\n                                                <tbody>\\n                                                    <tr *ngFor=\\\"let answer of question.answers\\\">\\n                                                        <td>{{answer.student_name}} - {{answer.student_code}}</td>\\n                                                        <td>{{answer.selected_option}}</td>\\n                                                    </tr>\\n                                                </tbody>\\n                                            </table>\\n                                        </div>\\n                                        <hr/>\\n                                    </div>\\n                                </accordion-group>\\n                            </ng-container>\\n                        </ng-container>\\n                    </accordion>\\n                </tab>\\n            </tabset>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal fade\\\" id=\\\"deleteQuizModal\\\" role=\\\"dialog\\\">\\n    <div class=\\\"vertical-alignment-helper\\\">\\n        <div class=\\\"modal-dialog modal-sm vertical-align-center\\\">\\n            <!-- Modal content-->\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                    <h4 class=\\\"modal-title\\\">Confirm Delete Quiz</h4>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default btn-success\\\" (click)=\\\"deleteQuiz()\\\" data-dismiss=\\\"modal\\\">Confirm</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal fade\\\" id=\\\"addQuizModal\\\" role=\\\"dialog\\\">\\n    <div class=\\\"vertical-alignment-helper\\\">\\n        <div class=\\\"modal-dialog modal-lg vertical-align-center\\\">\\n            <!-- Modal content-->\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                    <h4 class=\\\"modal-title\\\">Add new quiz</h4>\\n                </div>\\n                <form class=\\\"form-horizontal form-label-left\\\">\\n                    <div class=\\\"row modal-body\\\">\\n                        <div class=\\\"well form-group\\\">\\n                            <textarea autosize class=\\\"form-control only_bottom_border\\\" placeholder=\\\"Quiz title\\\" [(ngModel)]=\\\"quiz.title\\\" name=\\\"quiz_title\\\" style=\\\"font-size: large; resize: none;\\\"></textarea>\\n                        </div>\\n                        <div *ngFor=\\\"let question of quiz.questions; let i = index;\\\">\\n                            <form class=\\\"form-group well\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"col-sm-6 col-xs-12\\\">\\n                                        <textarea autosize rows=\\\"2\\\" class=\\\"form-control only_bottom_border\\\" name=\\\"question_title_{{i}}\\\" placeholder=\\\"Question\\\" [(ngModel)]=\\\"question.text\\\" style=\\\"resize: none;\\\" (keydown)=\\\"onTabInTextarea($event)\\\"></textarea>\\n                                    </div>\\n                                    <div class=\\\"col-sm-4 col-xs-6\\\">\\n                                        <label class=\\\"control-label col-sm-3\\\">Timer: </label>\\n                                        <div class=\\\"col-sm-9\\\">\\n                                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"question.timer\\\" name=\\\"question_timer_{{i}}\\\">\\n                                                <option *ngFor=\\\"let timer of appService.timers\\\" [value]=\\\"timer.value\\\">{{timer.text}}</option>\\n                                            </select>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-sm-1\\\" *ngIf=\\\"quiz.questions.length > 1\\\">\\n                                        <button class=\\\"btn btn-danger\\\" (click)=\\\"onRemoveQuestion(i)\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                                    </div>\\n                                    <div class=\\\"col-sm-1\\\" *ngIf=\\\"i == quiz.questions.length-1\\\">\\n                                    <button class=\\\"btn btn-primary\\\" (click)=\\\"onAddQuestion(i)\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\n                                        <input class=\\\"form-control\\\" name=\\\"question_{{i}}_option_a\\\" placeholder=\\\"Option A\\\" [(ngModel)]=\\\"question.option_a\\\">\\n                                    </div>\\n                                    <div class=\\\"col-sm-1 radio\\\">\\n                                        <label>\\n                                            <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_a\\\" [(ngModel)]=\\\"question.correct_option\\\">\\n                                            <p class=\\\"green_text\\\" *ngIf=\\\"question.option_a == question.correct_option\\\">Correct</p>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\n                                        <input class=\\\"form-control\\\" name=\\\"question_{{i}}_option_b\\\" placeholder=\\\"Option B\\\" [(ngModel)]=\\\"question.option_b\\\">\\n                                    </div>\\n                                    <div class=\\\"col-sm-1 radio\\\">\\n                                        <label>\\n                                            <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_b\\\" [(ngModel)]=\\\"question.correct_option\\\">\\n                                            <p class=\\\"green_text\\\" *ngIf=\\\"question.option_b == question.correct_option\\\">Correct</p>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\n                                        <input class=\\\"form-control\\\" name=\\\"question_{{i}}_option_c\\\" placeholder=\\\"Option C\\\" [(ngModel)]=\\\"question.option_c\\\">\\n                                    </div>\\n                                    <div class=\\\"col-sm-1 radio\\\">\\n                                        <label>\\n                                            <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_c\\\" [(ngModel)]=\\\"question.correct_option\\\">\\n                                            <p class=\\\"green_text\\\" *ngIf=\\\"question.option_c == question.correct_option\\\">Correct</p>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\n                                        <input class=\\\"form-control\\\" name=\\\"question_{{i}}_option_d\\\" placeholder=\\\"Option D\\\" [(ngModel)]=\\\"question.option_d\\\">\\n                                    </div>\\n                                    <div class=\\\"col-sm-1 radio\\\">\\n                                        <label>\\n                                            <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_d\\\" [(ngModel)]=\\\"question.correct_option\\\">\\n                                            <p class=\\\"green_text\\\" *ngIf=\\\"question.option_d == question.correct_option\\\">Correct</p>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </form>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default btn-success\\\" (click)=\\\"addQuiz()\\\">Save</button>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/trungtrucnguyen/Documents/GitHub/website-heroku/src/app/quiz/quiz-teacher.component.html\n// module id = ../../../../../src/app/quiz/quiz-teacher.component.html\n// module chunks = 14","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { StudentService, AppService, CourseService,AuthService,QuizService } from '../shared/shared.module';\ndeclare var jQuery: any;\n@Component({\n    selector: 'app-quiz-teacher',\n    templateUrl: './quiz-teacher.component.html'\n})\nexport class QuizTeacherComponent implements OnInit {\n    public apiResult: string;\n    public apiResultMessage: any;\n\n    public courses: Array < any > = [];\n    public selected_course;\n    public selected_class_id;\n    public quiz_list = [];\n    public quiz = {\n        id: 0,\n        title: '',\n        is_template: true,\n        questions: [{\n            text: '',\n            option_a: '',\n            option_b: '',\n            option_c: '',\n            option_d: '',\n            correct_option: null,\n            timer:10,\n            answers: []\n        }]\n    };\n    public deleting_quiz_id = 0;\n\n    public constructor(public authService: AuthService, public courseService: CourseService, public  appService: AppService,\n    public quizService: QuizService, public  studentService: StudentService, public  router: Router) {}\n\n    public ngOnInit() {\n        this.courseService.getTeachingCourses(this.authService.current_user.id).subscribe(result=>{\n            this.apiResult = result.result;\n            this.apiResultMessage = result.message;\n            if(this.apiResult == 'failure'){\n                this.appService.showPNotify(this.apiResult,this.apiResultMessage,'error');\n            }\n            this.courses = result.courses;\n            this.selected_course = this.courses[0];\n            this.loadQuiz();\n        },error=>{this.appService.showPNotify('failure',\"Server Error! Can't get teaching course\",'error');});\n    }\n\n    public onChangeCourse() {\n        this.loadQuiz();\n    }\n\n    public loadQuiz(){\n        this.quizService.getQuizByCourseAndClass(this.selected_course['id'],this.selected_course['class_id']).subscribe(result=>{\n            this.apiResult = result.result;\n            this.apiResultMessage = result.message;\n            if(this.apiResult == 'failure'){\n                this.appService.showPNotify(this.apiResult,this.apiResultMessage,'error');\n            }else{\n                this.quiz_list = result.quiz_list;\n                console.log(this.quiz_list);\n                for(var i = 0 ; i < this.quiz_list.length; i++){\n                    this.quiz_list[i]['isOpen'] = false;\n                }\n            }\n        },error=>{this.appService.showPNotify('failure',\"Server Error! Can't get quiz list\",'error');});\n    }\n    public onAddQuiz(){\n        this.quiz = {\n            id: 0,\n            title: '',\n            is_template:true,\n            questions: [{\n                text: '',\n                option_a: '',\n                option_b: '',\n                option_c: '',\n                option_d: '',\n                correct_option: null,\n                timer:10,\n                answers: []\n            }]\n        };\n        jQuery('#addQuizModal').modal('show');\n    }\n    public addQuiz(){\n        this.quizService.addQuiz(this.selected_course['id'],this.selected_course['class_id'],this.quiz).subscribe(result=>{\n            this.apiResult = result.result;\n            this.apiResultMessage = result.message;\n            if(this.apiResult == 'failure'){\n                this.appService.showPNotify(this.apiResult,this.apiResultMessage,'error');\n            }else{\n                this.loadQuiz();\n                this.appService.showPNotify(this.apiResult,this.apiResultMessage,'success');\n                jQuery('#addQuizModal').modal('hide');\n            }\n        },error=>{this.appService.showPNotify('failure',\"Server Error! Can't add quiz\",'error');});\n    }\n    public onAddQuestion() {\n        this.quiz.questions.push({\n            text: '',\n            option_a: '',\n            option_b: '',\n            option_c: '',\n            option_d: '',\n            correct_option: null,\n            timer:10,\n            answers: []\n        });\n    }\n    public onRemoveQuestion(index: number) {\n        for (var i = index; i < this.quiz.questions.length - 1; i++) {\n            this.quiz.questions[i].text = this.quiz.questions[i + 1].text;\n            this.quiz.questions[i].option_a = this.quiz.questions[i + 1].option_a;\n            this.quiz.questions[i].option_b = this.quiz.questions[i + 1].option_b;\n            this.quiz.questions[i].option_c = this.quiz.questions[i + 1].option_c;\n            this.quiz.questions[i].option_d = this.quiz.questions[i + 1].option_d;\n            this.quiz.questions[i].correct_option = this.quiz.questions[i + 1].correct_option;\n            this.quiz.questions[i].timer = this.quiz.questions[i + 1].timer;\n        }\n        this.quiz.questions.pop();\n    }\n\n    public onSaveQuiz(index){\n        this.quizService.updateQuiz(this.quiz_list[index]).subscribe(result=>{\n            if(result.result == 'success'){\n                this.appService.showPNotify('success',result.message,'success');\n            }else{\n                this.appService.showPNotify('failure',result.message,'error');\n            }\n        },error=>{this.appService.showPNotify('failure',\"Server Error! Can't delete quiz\",'error');});\n    }\n\n    public onDeleteQuiz(quiz_id){\n        this.deleting_quiz_id = quiz_id;\n        jQuery('#deleteQuizModal').modal('show');\n    }\n    public deleteQuiz(){\n        this.quizService.deleteQuiz(this.deleting_quiz_id).subscribe(result=>{\n            this.apiResult = result.result;\n            this.apiResultMessage = result.message;\n            if(this.apiResult == 'failure'){\n                this.appService.showPNotify(this.apiResult,this.apiResultMessage,'error');\n            }else{\n                this.loadQuiz();\n                this.appService.showPNotify(this.apiResult,this.apiResultMessage,'success');\n            }\n        },error=>{this.appService.showPNotify('failure',\"Server Error! Can't delete quiz\",'error');});\n    }\n\n\n    public onTabInTextarea(event){\n        if(event.keyCode === 9) { // tab was pressed\n            // // get caret position/selection\n            var start = event.target.selectionStart;\n            var end = event.target.selectionEnd;\n\n            var value = event.target.value;\n\n            // set textarea value to: text before caret + tab + text after caret\n            event.target.value = value.substring(0, start)+ \"\\t\" + value.substring(end);\n\n            // put caret at right position again (add one for the tab)\n            event.target.selectionStart = event.target.selectionEnd = start + 1;\n            // prevent the focus lose\n            event.preventDefault();\n        }\n    }\n\n    public onAddTemplateQuestion(quiz_index) {\n        this.quiz_list[quiz_index].questions.push({\n            text: '',\n            option_a: '',\n            option_b: '',\n            option_c: '',\n            option_d: '',\n            correct_option: null,\n            timer:10,\n            answers: []\n        });\n    }\n    public onRemoveTemplateQuestion(quiz_index, question_index) {\n        for (var i = question_index; i < this.quiz_list[quiz_index].questions.length - 1; i++) {\n            this.quiz_list[quiz_index].questions[i].text = this.quiz_list[quiz_index].questions[i + 1].text;\n            this.quiz_list[quiz_index].questions[i].option_a = this.quiz_list[quiz_index].questions[i + 1].option_a;\n            this.quiz_list[quiz_index].questions[i].option_b = this.quiz_list[quiz_index].questions[i + 1].option_b;\n            this.quiz_list[quiz_index].questions[i].option_c = this.quiz_list[quiz_index].questions[i + 1].option_c;\n            this.quiz_list[quiz_index].questions[i].option_d = this.quiz_list[quiz_index].questions[i + 1].option_d;\n            this.quiz_list[quiz_index].questions[i].correct_option = this.quiz_list[quiz_index].questions[i + 1].correct_option;\n            this.quiz_list[quiz_index].questions[i].timer = this.quiz_list[quiz_index].questions[i + 1].timer;\n        }\n        this.quiz_list[quiz_index].questions.pop();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/trungtrucnguyen/Documents/GitHub/website-heroku/src/app/quiz/quiz-teacher.component.ts","import { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { FormsModule }    from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { QuizTeacherComponent }    from './quiz-teacher.component';\nimport { TabsModule,AccordionModule ,PaginationModule } from 'ngx-bootstrap';\nimport { AutosizeModule } from '../shared/module/autosize/autosize.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { TooltipModule } from 'ngx-bootstrap';\nconst Routes: Routes = [\n  { path: '',  component: QuizTeacherComponent },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(Routes),\n    PaginationModule.forRoot(),\n    TooltipModule.forRoot(),\n    AccordionModule.forRoot(),\n    TabsModule.forRoot(),\n    SharedModule,\n    AutosizeModule\n  ],\n  declarations: [\n    QuizTeacherComponent,\n  ],\n  providers: []\n})\nexport class QuizModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/trungtrucnguyen/Documents/GitHub/website-heroku/src/app/quiz/quiz.module.ts"],"sourceRoot":"webpack:///"}